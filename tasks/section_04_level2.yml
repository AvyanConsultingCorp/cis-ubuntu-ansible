---

  - name: Determines if grub is used
    stat: path=/boot/grub/grub.cfg
    register: grub_cfg_file

  - name: Determines if extlinux is used
    stat: path=/extlinux.conf
    register: extlinux_cfg_file

  - name: Determines if apparmor is already set in boot config
    lineinfile: >
        dest='/boot/config-{{ ansible_kernel }}'
        regexp='CONFIG_DEFAULT_SECURITY_APPARMOR'
        line="CONFIG_DEFAULT_SECURITY_APPARMOR=y"
        state=present
    register: boot_cfg_apparmor

  - name: 4.5 Activate AppArmor (install) (Scored)
    apt: >
        name=apparmor
        state=present
    when: use_apparmor == True
    tags:
      - section4
      - section4.5

  - name: 4.5 Activate AppArmor (Kernel LSM - grub)
    lineinfile: >
        dest='/etc/default/grub'
        regexp='^GRUB_CMDLINE_LINUX=""'
        line='GRUB_CMDLINE_LINUX=apparmor="1 security=apparmor"'
        state=present
    when: use_apparmor == True and grub_cfg_file.stat.exists
    tags:
      - section4
      - section4.5

  - name: 4.5 Activate AppArmor (Kernel LSM - extlinux)
    lineinfile: >
        dest='/extlinux.conf'
        regexp="^append initrd="
        line="append initrd={{ ansible_cmdline['initrd'] }} root={{ ansible_cmdline['root'] }} console=tty0 console={{ ansible_cmdline['console'] }} apparmor=1 security=apparmor ro quiet"
    when: (use_apparmor == True and extlinux_cfg_file.stat.exists) and boot_cfg_apparmor.changed != "False"
    tags:
      - section4
      - section4.5

  - name: 4.5 Activate AppArmor (start) (Scored)
    service: >
        name=apparmor
        state=started
    when: use_apparmor == True
    register: apparmor_status
    ignore_errors: True
    tags:
      - section4
      - section4.5

  - name: Determine if Apparmor started without error
    fail: msg="Apparmor can not be started. This is normal behavior if you run the playbook for the first time. Please run it again to proceed with the rest of the playbook."
    when: apparmor_status.failed is defined

  - name: 4.5 Activate AppArmor (fix profiles) (Scored)
    service: >
        name=rsyslog
        state=restarted
    when: use_apparmor == True
    tags:
      - section4
      - section4.5

  - name: 4.5 Activate AppArmor (Scored)
    command: apparmor_status
    register: aa_status_lines
    failed_when: '"0 profiles are loaded" in aa_status_lines.stdout_lines or "0 processes are in complain mode." not in aa_status_lines.stdout_lines or "0 processes are unconfined but have a profile defined." not in aa_status_lines.stdout_lines'
        # - '"0 processes are unconfined but have a profile defined." not in aa_status_lines.stdout_lines'
    changed_when: False
    when: use_apparmor == True
    tags:
      - section4
      - section4.5

  - name: 4.5 Activate AppArmor (enforce install) (Scored)
    apt: >
        name=apparmor-utils
        state=present
    when: use_apparmor == True
    tags:
      - section4
      - section4.5

  - name: 4.5 Activate AppArmor (enforce) (Scored)
    #shell: 'aa-enforce /etc/apparmor.d/*'
    shell: for profile in /etc/apparmor.d/*; do aa-enforce $profile; done
    register: aaenforce_rc
    failed_when: aaenforce_rc.rc == 1
    changed_when: False
    when: use_apparmor == True
    tags:
      - section4
      - section4.5
